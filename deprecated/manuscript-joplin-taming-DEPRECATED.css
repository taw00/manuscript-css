/* Manuscript via CSS v2.0 - taming the Joplin Desktop note-taking application
 * THIS STYLESHEET IS DEPRECATED
 *
 * These styles are a complement to manuscript.css and only useful if you use
 * Joplin as a general purpose markdown editor. If so, import this stylesheet
 * when you import manuscript.css. First this, then that. As such:

<!-- beginning of your markdown-based manuscript -->
<style>
    @import "manuscript-joplin-taming.css";
    @import "manuscript.css";
    ...
</style>
...
<!-- end of your markdown-based manuscript -->

 * Why this exists: to neutralize Joplin's additional rendering and export
 * stylings.
 *
 * By the way, I can't recommend Joplin enough. It is my "second brain". I
 * have used it for years and am a paying customer (it's free to use for most
 * functionality). Check it out <https://joplinapp.org>.
 *
 * Copyright (c) Todd Warner <t0dd@protonmail.com>
 * This work is licensed under Attribution 4.0 International. To view a copy
 * of this license, visit http://creativecommons.org/licenses/by/4.0/
 *
 * Note, there are two viewport expansion tweaks here. Changes like these
 * assume the person importing this stylesheet is controlling their own
 * container widths. (Which is the case for the manuscript css, of course.) Or
 * it needs to be that wide.
 */

/* syntax highlighting: turn off the base level tweak */
.hljs { color: inherit; background: inherit; }
/* remove Joplin internal link icon and extra styling */
a .resource-icon { display: none; }
a:any-link { color: unset; background: unset; filter: unset; }
a:any-link[href='#'] { color: unset; }
a:hover[href='#'] { color: unset; }
/* negate the .inline-code stylings (we take over later) */
code.inline-code {
    color: unset; background: unset;
    font-size: unset; font-weight: unset;
    font-family: unset; margin: 0; border: 0;
}

/* Rendered view: viewport to 100% */
#rendered-md { width: 100%; max-width: unset; margin: 0 auto; padding: unset; }
#rendered-md { box-shadow: unset; } /* cuz I set this in my CSS for this ID }
/* Joplin Cloud view: viewport to 100% */
body.page-note .note-main { margin: 0 auto; padding: 0; max-width: 100%;}

/* Joplin Cloud view: remove note title */
div.note-main > h1.title { display: none; }
/* Joplin Cloud view: remove document last-updated line at the top */
div.note-main > p.last-updated { display: none; }
/* Joplin Cloud view: branded navbar - fade to watermark */
body.page-note nav.navbar { opacity: .15; }
/* Joplin Cloud view: footer with copright and T&Cs - fade to watermark */
body.page-note > div.footer { opacity: .5; }
body.page-note .note-main { margin: 0 auto; padding: 0; max-width: 100%;}

@media print {
/* Exported print: remove document last-update line at the top */
div.note-main > p.last-updated { display: none; }
/* Exported print: remove excess padding
 *                 remove the Joplin note title */
.exported-note { margin: 0; padding: 0; }
.exported-note-title { display: none !important; }
/* Exported print from Joplin Cloud: remove the top-header branding */
body.page-note > main.main { margin: 0; padding: 0; }
body.page-note nav.navbar { display: none !important; }
div.note-main > h1.title { display: none; }
/* Exported print from Joplin Cloud: remove the footer */
body.page-note > div.footer div.content { display: none !important; }
}

/* blockquote, pre, and code */
pre {
    white-space: pre;
    overflow-x: auto; /* see also EXPORTING section below */
    font-size: var(--m-font-size-preformatted);
    font-weight: var(--m-font-weight-preformatted);
    font-family: var(--m-font-family-preformatted);
    line-height: 1.15;
    margin-block-start: 1em;
    margin-block-end: 1em;
    color: inherit;
    background: inherit !important; /* have to override Joplin's !important */
}
pre > code {
    font-size: inherit; font-weight: inherit; font-family: inherit;
    white-space: inherit;
    font-size: 1em;
    font-family: var(--m-font-family-preformatted);
    color: inherit; background: inherit;
}
:not(pre) > code,
code.inline-code {
    font-size: var(--m-font-size-preformatted-inline);
    font-weight: var(--m-font-weight-preformatted-inline);
    font-family: var(--m-font-family-preformatted);
    /*border: 1px solid rgb(70, 70, 70);
    border-radius: 4px;*/
    border: 0;
    /* I want inline code to be of the more generic font group, if even it's
       defined differently. */
    font-family: var(--m-font-family-preformatted);
    color: inherit; background: inherit;
}
blockquote {
  padding: 0;
  margin-block-start: 1em;
  margin-block-end: 1em;
  margin-inline-start: 40px; /* 2.5 * 16 */
  margin-inline-end: 40px;
}

/* killall syntax highlighting */
/* We are not doing this yet and I don't know that I want to          ****
 * probably best done with javascript, with something like this...
 *     document.getElementById("container").classList.remove("color");
 * but that is differently messy.                                     ****
.hljs { color: rgb(171, 178, 191); background: rgb(40, 44, 52); }
.hljs-keyword, .hljs-operator { color: rgb(249, 38, 114); }
.hljs-pattern-match { color: rgb(249, 38, 114); }
.hljs-pattern-match .hljs-constructor { color: rgb(97, 174, 238); }
.hljs-function { color: rgb(97, 174, 238); }
.hljs-function .hljs-params { color: rgb(166, 226, 46); }
.hljs-function .hljs-params .hljs-typing { color: rgb(253, 151, 31); }
.hljs-module-access .hljs-module { color: rgb(126, 87, 194); }
.hljs-constructor { color: rgb(226, 185, 61); }
.hljs-constructor .hljs-string { color: rgb(156, 204, 101); }
.hljs-comment, .hljs-quote { color: rgb(177, 142, 177); font-style: italic; }
.hljs-doctag, .hljs-formula { color: rgb(198, 120, 221); }
.hljs-section, .hljs-name, .hljs-selector-tag, .hljs-deletion, .hljs-subst { color: rgb(224, 108, 117); }
.hljs-literal { color: rgb(86, 182, 194); }
.hljs-string, .hljs-regexp, .hljs-addition, .hljs-attribute, .hljs-meta .hljs-string { color: rgb(152, 195, 121); }
.hljs-built_in, .hljs-title.class_, .hljs-class .hljs-title { color: rgb(230, 192, 123); }
.hljs-attr, .hljs-variable, .hljs-template-variable, .hljs-type, .hljs-selector-class, .hljs-selector-attr, .hljs-selector-pseudo, .hljs-number { color: rgb(209, 154, 102); }
.hljs-symbol, .hljs-bullet, .hljs-link, .hljs-meta, .hljs-selector-id, .hljs-title { color: rgb(97, 174, 238); }
.hljs-emphasis { font-style: italic; }
.hljs-strong { font-weight: bold; }
.hljs-link { text-decoration: underline; }
*/
