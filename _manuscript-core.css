/* Manuscript via CSS v2.0 — the core styles
 *
 * This contains all of the baseline logic for formatting—via CSS styles—a
 * a markdown or HTML document to present a rendered artifact that closely
 * follows industry-standard prose manuscript guidelines.
 *
 * Though this stylesheet alone is sufficient to enable formatting manuscripts
 * for US letter-dimensioned short-prose narratives, it's really intended to
 * act as support for manuscript.css. Import that stylesheet instead.
 *
 * Copyright (c) Todd Warner <t0dd@protonmail.com>
 * This work is licensed under Attribution 4.0 International. To view a copy
 * of this license, visit http://creativecommons.org/licenses/by/4.0/
 */

@import "_manuscript-style-reset.css";
@import "_manuscript-config.css";

html { font-size: var(--m-font-size); } /* 1rem defined */
html, body { background-color: rgb(204,204,204); } /* off-white */

/* we are not explicit here, but call #manuscript within your markdown or
 * HTML as <article id="manuscript" ...> */
#manuscript {
    color: black !important;
    background-color: rgba(0,0,0,0);
    font-size:   1rem;
    font-weight: var(--m-font-weight);
    font-family: var(--m-font-family);
    line-height: var(--m-line-spacing);
    /* -- future feature (still in a w3c draft)
    hyphenate-limit-chars: 6 3 2;
    hyphenate-limit-lines: 2;
    */
}
#manuscript * {
    opacity: 1;
}
#manuscript *:not(hr,ol,ul,dl,menu,li,dt,dd) {
    margin: 0; padding: 0; border: 0;
}
#manuscript :is(p,pre) {
    word-break: normal; overflow-wrap: break-word;
}
#manuscript hr {
    /* because hr color is resistent to change (a mystery for now) */
    color: black !important;
    border-color: black !important;
    border-top: 0;  border-bottom-width: 1px;
    border-left: 0; border-right: 0;
    width: 80%;
}
#manuscript a, a:is(:any-link,:link,:active,:visited,:hover) {
    color: var(--m-link-color);
    text-decoration: none;
}
#manuscript a:hover { border-bottom: solid var(--m-link-color) 2px; }

/* 2 deep (or more) ordered lists use lower-latin (a, b, c, ...) */
:is(ol, ul, menu) ol {
  /*list-style-type: circle;*/
  list-style-type: lower-latin;
}
/* 2 deep unordered lists use an endash */
:is(ol, ul, menu) ul,
:is(ol, ul, menu) menu {
  /*list-style-type: circle;*/
  list-style-type: "- ";
}
/* 3+ deep unordered lists use an endash - here to override defaults */
:is(ol, ul, menu) :is(ol, ul, menu) ul,
:is(ol, ul, menu) :is(ol, ul, menu) menu {
  /*list-style-type: square;*/
  list-style-type: "- ";
}

/* rendering to the screen
 * HTML and BODY are off-white. We add a pretty 3D virtual white page with
 * #vpage and configure the content container to hold the text within.
 * Implemenation note: #vpage and #manuscript use a combination of position
 * box-sizing and overflow that cannot change or the layout gets weird (though
 * overflow could still be set to auto, theoretically. */
@media screen {
/* a virtual page */
#vpage {
    display: block;
    position: relative; box-sizing: border-box; overflow: hidden;
    top: 0; left: 0;
    width: 100%; max-width: var(--m-page-width);
    margin: 10px auto;
    background-color: white !important;
    box-shadow: 0 0 20px black;
}
/* the content container */
#manuscript {
    display: block;
    position: relative; box-sizing: border-box; overflow: hidden;
    width: 100%; max-width: var(--m-content-width);
    margin: var(--m-page-margin) auto;
    border: var(--m-manuscript-border);
}
} /* /screen */

/* printing / exporting to the actual page
 * HTML and BODY need to be transparent and the vpage container becomes
 * undefined (@page replaces its purpose) and the manuscript container goes back
 * to being a plain 'ol box filling the page.
 */
@media print {
html, body { background-color: rgba(0,0,0,0); }
} /* /print */

/*
 * fonts and spacing for all the sections and divs
 */
#manuscript #m-contact {
    font-size:   var(--m-font-size-contact);
    font-weight: var(--m-font-weight-contact);
    font-family: var(--m-font-family-contact);
    line-height: var(--m-line-spacing-contact);
}
#manuscript .m-header {
    font-size:   var(--m-font-size-header);
    font-weight: var(--m-font-weight-header);
    font-family: var(--m-font-family-header);
    line-height: var(--m-line-spacing);
}
#manuscript section:is(.m-part, .m-chapter) > .m-header {
    font-size:   var(--m-font-size-headers);
    font-weight: var(--m-font-weight-headers);
    font-family: var(--m-font-family-headers);
}
#manuscript > .m-facts,
#manuscript :not(section:is(.m-part,.m-chapter,.m-scene)) .m-facts {
    font-size:   var(--m-font-size-facts);
    font-weight: var(--m-font-weight-facts);
    font-family: var(--m-font-family-facts);
    line-height: var(--m-line-spacing-facts);
}
#manuscript section:is(.m-chapter,.m-scene) .m-facts {
    font-size:   inherit;
    font-weight: inherit;
    font-family: inherit;
    line-height: inherit;
}


/* blockquote, pre, code
 * These are often specifically styled by markdown editors to something other
 * than the browser default. So we have to be a bit more "explicit" when we
 * style them for our purposes. (See also _manuscript-style-reset.css)
 * Note. <pre> and <code> will be monospaced (by default). Finally, <pre>
 * wraps, <code> does not, and you will have scrollbars in the HTML view. But
 * not in the generated PDF (print view).
 */
#manuscript blockquote {
    border: 0;
    margin: var(--m-elbow-room) var(--m-margins-blockquote);
    /* so many markdown tools manipulate these. overriding */
    padding: 0; background-color: inherit;
}
#manuscript :is(pre) {
    white-space: pre-wrap; /* we wrap pre but not code */
    font-size:   var(--m-font-size-preformatted);
    font-weight: var(--m-font-weight-preformatted);
    font-family: var(--m-font-family-preformatted);
    line-height: var(--m-line-spacing-preformatted);
    margin: var(--m-elbow-room) var(--m-margins-preformatted);
    /* so many markdown tools manipulate these. overriding */
	color: inherit; background-color: inherit;
}
#manuscript pre > code {
    white-space: pre; /* we wrap pre but not code */
    overflow-x: auto; /* allow scroll bars */
    font-size:   var(--m-font-size-code);
    font-weight: var(--m-font-weight-code);
    font-family: var(--m-font-family-code);
    line-height: var(--m-line-spacing-code);
    /* so many markdown tools manipulate these. overriding */
	color: inherit; background-color: inherit;
}
/* Allow scroll bars in HTML view, but not in print view. */
@media print { #manuscript pre > code { overflow-x: hidden; } }
#manuscript :not(pre) > code {
    font-size:   var(--m-font-size-code-inline);
    font-weight: var(--m-font-weight-code-inline);
    font-family: var(--m-font-family-code);
    white-space: inherit;
    /* so many markdown tools manipulate these. overriding */
	color: inherit; background-color: inherit;
}
/* .poem and .poetry (aliases for each other)
 * Wrap a <div class=".poetry"> around a <pre><code> (or ```plaintext in
 * markdown) and the fonts styles and behavior change a bit.
 */
#manuscript :is(.poem,.poetry) {
    margin: 0; padding: 0; border: 0;
}
#manuscript :is(.poem,.poetry) :is(p,pre),
#manuscript :is(.poem,.poetry) pre > code {
    white-space: pre-wrap; /* we wrap poetry */
    overflow-x: hidden; /* no scroll bars */
    font-size:   var(--m-font-size-poetry);
    font-weight: var(--m-font-weight-poetry);
    font-family: var(--m-font-family-poetry);
    line-height: var(--m-line-spacing-poetry);
}

#manuscript #m-contact {
    position: absolute; box-sizing: border-box; overflow: visible;
    top: 0px; left: 0px;
}
#manuscript #m-contact p {
    text-align: left;
}

#manuscript > .m-facts,
#manuscript :not(section:is(.m-part,.m-chapter,.m-scene)) .m-facts {
    position: var(--m-position-facts);
    box-sizing: border-box; overflow: visible;
    top: var(--m-top-facts); bottom: var(--m-bottom-facts);
    left: var(--m-left-facts); right: var(--m-right-facts);
    margin: var(--m-margin-facts);
}

#manuscript > .m-facts p,
#manuscript :not(section:is(.m-part,.m-chapter,.m-scene)) .m-facts p {
    text-align: var(--m-text-align-facts);
}

#manuscript section:is(.m-part) .m-facts {
    margin: var(--m-room-for-two) auto 0;
}
#manuscript section:is(.m-chapter,.m-scene) .m-facts {
    margin: 0 auto;
}
#manuscript section:is(.m-part,.m-chapter,.m-scene) .m-facts p {
    text-align: center;
}

/* per-component top margins
 * Formatting notes -- (these assertions need to be retested)
 * - '#manuscript div.m-header' must always exist in the document.
 *   This block contains the manuscript title and whatnot.
 * - Parts: if there are multiple parts, '#m-part div.m-header'
 *   must exist for each part.
 * - Chapters: if there are multiple chapters '#m-part div.m-header'
     must exist for each chapter. If this is a long-form manuscript,
     this formatting CSS expects chapters.
 * - Scenes: '#m-scene div.m-header' ... doesn't have to (and probably
     shouldn't) exist. */

#manuscript .m-header {
    margin: 0 auto;
    /* .m-header can never match the breadth of the prose */
    width: 100%; max-width: var(--m-max-width-headers);
}

/* place the manuscript title block 1/3rd or 5/12th down the page */
#manuscript > .m-header {
    margin: var(--m-offset-title) auto var(--m-room-for-two);
}

/* part and chapter top margins (may be large (long) or small (short))
 * But only if they have a title block, otherwise, it's assumed no margin */
#manuscript section:is(.m-part, .m-chapter) > .m-header {
    margin-top: var(--m-offset-parts-and-chapters-render) !important;
}
@media print {
/* part and chapter top margins (may be large (long) or small (short))
 * But only if they have a title block, otherwise, it's assumed no margin */
#manuscript section:is(.m-part, .m-chapter) > .m-header {
    margin-top: var(--m-offset-parts-and-chapters) !important;
}
}

/* scenes: small margin betwen scenes and whatever precedes */
#manuscript section.m-scene {
    margin-top: var(--m-offset-scene) !important;
}
/* the prose content:
 * small margin between prose content and a scene's title block if it exists */
#manuscript section.m-scene > .m-header + * {
    margin-top: var(--m-elbow-room) !important;
}

/* Inside of an .m-header:
 * - H1 means title, H2 means subtitle, H3 means author
 * - > (i.e. blockquote) means epigraph
 * - And finally, if you want you can wrap word count, audience, and genre
 *   in an .m-facts div.
 *
 * Outside of an .m-scene
 * - H6 represents a dinkus or a -30- marker
 *
 * Inside of a .m-scene where all the prose goes, H1 through H6 means ...
 * header 1 through header 6 as you would expect. And the > (blockquote) also
 * works as you would expect there. */

#manuscript .m-header > :is(h1, h2, h3, h4, h5, h6),     /* all header prose */
#manuscript .m-header > p,
#manuscript .m-header :not(blockquote,.m-facts) p {       /* except bq&facts */
    display: block;
    margin: 0; padding: 0; border: 0;
    text-align: center !important;
}
#manuscript > .m-header > h1 {                           /* title: main work */
    font-size:   var(--m-font-size-title);
    font-weight: var(--m-font-weight-title);
    font-family: var(--m-font-family-title);
}
#manuscript > .m-header > h2 {                        /* subtitle: main work */
    font-size:   var(--m-font-size-subtitle);
    font-weight: var(--m-font-weight-subtitle);
    font-family: var(--m-font-family-subtitle);
}
#manuscript > .m-header > h3 {                          /* author: main work */
    font-size:   var(--m-font-size-author);
    font-weight: var(--m-font-weight-author);
    font-family: var(--m-font-family-author);
}
#manuscript > section.m-part > .m-header > h1 {               /* title: part */
    font-size:   var(--m-font-size-title-part);
    font-weight: var(--m-font-weight-title-part);
    font-family: var(--m-font-family-title-part);
}
#manuscript > section.m-part > .m-header > h2 {            /* subtitle: part */
    font-size:   var(--m-font-size-subtitle-part);
    font-weight: var(--m-font-weight-subtitle-part);
    font-family: var(--m-font-family-subtitle-part);
}
#manuscript > section.m-part > .m-header > h3 {            /* subtitle: part */
    font-size:   var(--m-font-size-author-part);
    font-weight: var(--m-font-weight-author-part);
    font-family: var(--m-font-family-author-part);
}
#manuscript section.m-chapter > .m-header > h1 {           /* title: chapter */
    font-size:   var(--m-font-size-title-chapter);
    font-weight: var(--m-font-weight-title-chapter);
    font-family: var(--m-font-family-title-chapter);
}
#manuscript section.m-chapter > .m-header > h2 {        /* subtitle: chapter */
    font-size:   var(--m-font-size-subtitle-chapter);
    font-weight: var(--m-font-weight-subtitle-chapter);
    font-family: var(--m-font-family-subtitle-chapter);
}
#manuscript section.m-chapter > .m-header > h3 {          /* author: chapter */
    font-size:   var(--m-font-size-author-chapter);
    font-weight: var(--m-font-weight-author-chapter);
    font-family: var(--m-font-family-author-chapter);
}
#manuscript section.m-scene > .m-header > h1 {               /* title: scene */
    font-size:   var(--m-font-size-title-scene);
    font-weight: var(--m-font-weight-title-scene);
    font-family: var(--m-font-family-title-scene);
}
#manuscript section.m-scene > .m-header > h2 {            /* subtitle: scene */
    font-size:   var(--m-font-size-subtitle-scene);
    font-weight: var(--m-font-weight-subtitle-scene);
    font-family: var(--m-font-family-subtitle-scene);
}
#manuscript section.m-scene > .m-header > h3 {              /* author: scene */
    font-size:   var(--m-font-size-author-scene);
    font-weight: var(--m-font-weight-author-scene);
    font-family: var(--m-font-family-author-scene);
}

#manuscript .m-header > blockquote :not(pre,code) {         /* the epigraphs */
    width: max-content; max-width: var(--m-max-width-epigraph);
    margin: var(--m-elbow-room) auto;
    font-size:   var(--m-font-size-epigraph);
    font-weight: var(--m-font-weight-epigraph);
    font-family: var(--m-font-family-epigraph);
    font-style:  var(--m-font-style-epigraph);
    line-height: var(--m-line-spacing);
}
#manuscript .m-header > :is(pre,.poem,.poetry) {  /* .m-headers pre & poetry */
    margin: 0 auto; padding: 0; border: 0;
    width: max-content; max-width: 100%;
    font-size: inherit; font-weight: inherit;
    line-height: inherit;
}

#manuscript .m-header > :first-child { margin-top: 0; }
#manuscript .m-header > :last-child { margin-bottom: 0; }

/* automated content for the dinkuses between scenes */
#manuscript section.m-scene::after { content: var(--m-dinkus); }
#manuscript section.m-scene:last-of-type::after { content: ""; }
/* automated content for the -30- marker at the end */
#manuscript > section:is(.m-part,.m-chapter,.m-scene):last-of-type::after { content: var(--m-30-); }

/* dinkus and -30- markers are formatted as such */
#manuscript > h6,                        /* manually inserted top-level -30- */
#manuscript > section:last-of-type::after,             /* auto-inserted -30- */
#manuscript section.m-scene::after,                  /* auto-inserted dinkus */
#manuscript :not(section.m-scene) > h6 {   /* manually ins. between sections */
    display: block;
    font-size:   var(--m-font-size-dinkus-30-);
    font-weight: var(--m-font-weight-dinkus-30-);
    font-family: var(--m-font-family-dinkus-30-);
    text-align: center !important;
    line-height: var(--m-line-spacing);
    /*margin: 0; padding: 0;*/ border: 0;
    /*margin-top: var(--m-elbow-room);*/
}



/*
 * The prose
 */

/* Align left/start all the prose */
#manuscript blockquote :is(h1,h2,h3,h4,h5,h6),
#manuscript section.m-scene :is(h1,h2,h3,h4,h5,h6),
#manuscript blockquote p,
#manuscript section.m-scene p {
    display: block;
    margin: 0; padding: 0; border: 0;
    text-align: var(--m-text-align);
    line-height: var(--m-line-spacing);
    hyphens: var(--m-hyphens);
}

/* paragraph indentation / spacing for all the prose
 * (which one is enabled is determined by .narrative or .non-narrative) */
#manuscript blockquote p,
#manuscript section.m-scene p {
    text-indent: var(--m-indent);
    margin-top: var(--m-paragraph-spacing);
}
/* ... but undo that if the prose is in the scene header. */
#manuscript section.m-scene .m-header p {
    text-indent: unset;
    margin-top: unset;
}

/* ... and treat paragraphs after certain classes/elements different */
#manuscript :is(blockquote,h1,h2,h3,h4,h5,h6,img,figure) + p,
#manuscript :is(blockquote, section.m-scene) > p:first-of-type {
    text-indent: var(--m-indent-first-paragraph) !important;
}
#manuscript :is(h1,h2,h3,h4,h5,h6) + p,
#manuscript :is(section.m-scene) > p:first-of-type {
    margin-top: 0;
}


/* PAGE BREAK LOGIC */

/* OLD PRINT RULES */
@media print {
/* page break after a manuscript title block or part header */
/* page break after a part */
/* ...except for the last part */
/* page break after a chapter */
/* ...except for the last chapter */
/*
#manuscript > .m-header,
#manuscript section.m-part > .m-header {
    break-after: var(--m-page-break);
}
#manuscript section.m-part {
    break-after: var(--m-page-break);
}
#manuscript section.m-part:last-of-type {
    break-after: avoid !important;
}
#manuscript section.m-chapter {
    break-after: var(--m-page-break);
}
#manuscript section.m-chapter:last-of-type {
    break-after: avoid !important;
}
*/
} /* end of print rules */

/* OLD SCREEN RULES */
@media screen {
/* page break (simulated) after a title or part header */
/* page break after a part */
/* ...except for the last part */
/* page break (simulated) after a chapter */
/* ...except for the last chapter */
/*
#manuscript > .m-header,
#manuscript section.m-part > .m-header {
    border-bottom: var(--m-page-break-simulated);
}
#manuscript section.m-part {
    border-bottom: var(--m-page-break-simulated);
}
#manuscript section.m-part:last-of-type {
    border-bottom: var(--m-page-break-simulated);
}
#manuscript section.m-chapter {
    border-bottom: var(--m-page-break-simulated);
}
#manuscript section.m-chapter:last-of-type {
    border-bottom: 0 !important;
}
*/
} /* end of screen rules */

/* NEW */
@media print {
#manuscript > .m-header {
    break-after: var(--m-page-break);
}
#manuscript section.m-part > .m-header {
    break-before: var(--m-page-break);
}
#manuscript section.m-chapter > .m-header {
    break-before: var(--m-page-break);
}
#manuscript > .m-header + section > .m-header {
    break-before: avoid;
}
/* don't create long-form documents that only have scenes. It's weird. But...*/
#manuscript > .m-header + section.m-scene {
    break-before: var(--m-page-break);
}
} /* end of print rules */

/* NEW */
@media screen {
#manuscript > .m-header {
    border-bottom: var(--m-page-break-simulated);
}
#manuscript section.m-part > .m-header {
    border-top: var(--m-page-break-simulated);
}
#manuscript section.m-chapter > .m-header {
    border-top: var(--m-page-break-simulated);
}
#manuscript > .m-header + section > .m-header {
    border-top: unset;
}
/* don't create long-form documents that only have scenes. It's weird. But...*/
#manuscript > .m-header + section.m-scene {
    border-top: var(--m-page-break-simulated);
}
} /* end of screen rules */

/* END PAGE BREAK LOGIC */




/***
 * PAGE BREAK AVOIDANCE RULES
 ***/

@media print {
    a { break-inside: avoid !important; }

    h1, h2, h3, h4, h5, h6 {
        break-inside: avoid !important;
        break-after: avoid !important;
    }

    img, figure {
        break-inside: avoid !important;
        break-after: avoid !important;
    }

    tr { break-inside: avoid !important; }

/*
 * god knows why, but these avoidance rules are not working
 * ********************************************************
 */

/* don't page break inside a title-block header */
#manuscript :is(section.m-part,section.m-chapter,section.m-scene) > .m-header {
    page-break-inside: avoid !important;
    break-inside: avoid !important;
}
/* don't page break after a chapter header or scene header */
#manuscript :is(section.m-chapter,section.m-scene) > .m-header {
    page-break-after: avoid !important;
    break-after: avoid !important;
}
/* don't page break before scene */
#manuscript section.m-scene,
#manuscript section.m-scene > .m-header {
    page-break-before: avoid !important;
    break-before: avoid !important;
}
/* don't page break before a chapter header's or scene header's first child */
#manuscript :is(section.m-chapter, section.m-scene) > .m-header + * {
    page-break-before: avoid !important;
    break-before: avoid !important;
}
/* don't page break before a dinkus or -30- marker */
#manuscript section.m-scene::after,
#manuscript h6 {
    page-break-before: avoid !important;
    break-before: avoid !important;
}
} /* end @media print */
