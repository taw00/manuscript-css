/* Page breaks and simulated page breaks
 *
 * Note, if you start mixing up odd things sometimes page breaking can get odd
 * as well. So, be mindful if you see a blank page or stacks of simulated page
 * break lines or parts and chapters with no scene afterward, that maybe you
 * shouldn't have done whatever you have done.
 *
 * Copyright (c) Todd Warner
 * This work is licensed under Attribution 4.0 International. To view a copy
 * of this license, visit http://creativecommons.org/licenses/by/4.0/
 *
 * Note, short works will not have any page breaks unless you do something
 * odd. Note, section.m-poem is only for long/poetry manuscripts. If you want a
 * poem in the middle of a short story or novel, use div.x-poem instead.
 *
 * SHORT :not(.long,.poetry)
 *     > .m-title-page = page break (no page break for anything else)
 *     .m-title-page + anything = no page break
 *     .m-part = no page break
 *     .m-chapter = no page break
 *     .m-scene = no page break
 * LONG :is(.long,.poetry) …
 *     > .m-title-page = page break
 *     .m-title-page + anything = page break
 *     .m-part = page break
 *     .m-part > .m-chapter = NO page break (therefore not declared)
 *     .m-chapter + .m-chapter = page break
 *     .m-scene + .m-chapter = page break (why would this happen?)
 * POEMS …
 *     .m-poem = page break
 *     .m-poem + anything = page break
 */


/*
 * PAGE BREAKS, SIMULATED
 */
@media screen {
    #manuscript {
        /*
         * LONG page breaking
         */
        &:is(.long,.poetry) {
            & > :is(div.m-title-page,section) + div.m-title-page,
            & > div.m-title-page + section,
            & section.m-part:has( > .m-title),
            & section.m-chapter:has( ~ section ) + .m-chapter:has( > .m-title ),
            & section.m-scene + .m-chapter:has( > .m-title ),
            & div.xxxxxxxx {
                border-block-start: var(--m-page-break-simulated);
            }

        /*
         * POEM page breaking
         */
            & section > section.m-poem,
            & :is(div.m-title-page,section) + section.m-poem,
            & section.m-poem + section {
                border-block-start: var(--m-page-break-simulated-long);
            }
        }
    } /* end #manuscript */
} /* end @media screen */


/*
 * PAGE BREAKS ACTUAL
 */
@media print {
    #manuscript {
        /*
         * LONG page breaking
         */
        &:is(.long,.poetry) {
            & > :is(div.m-title-page,section) + div.m-title-page,
            & > div.m-title-page + section,
            & section.m-part:has( > .m-title),
            & section.m-chapter:has( ~ section ) + .m-chapter:has( > .m-title ),
            & section.m-scene + .m-chapter:has( > .m-title ),
            & div.xxxxxxxx {
                break-before: page;
            }
        /*
         * POEM page breaking
         */
            & section > section.m-poem,
            & :is(div.m-title-page,section) + section.m-poem,
            & section.m-poem + section {
                break-before: page;
            }
        }


        /* AVOIDANCE RULES ----- */

        & a,
        & tr {
            break-inside: avoid-page !important;
        }

        & :is(h1, h2, h3, h4, h5, h6),
        & :is(img, figure) {
            break-inside: avoid-page !important;
            break-after: avoid-page !important;
        }


        /* avoid page break inside a note */
        /* avoid page break inside a poem stanza */
        /* avoid page break inside a header blocks */
        & .m-note,
        & .x-poem pre,
        & section.m-poem pre,
        & .m-contact,
        & .m-count {
            break-inside: avoid-page !important;
        }

        /* avoid page break before a dinkus or -30- marker */
        & section.m-scene::after,
        &::after,
        & h6 {
            break-before: avoid-page !important;
            break-inside: avoid-page !important;
        }
    } /* end #manuscript */

    #vpage, #manuscript, #manuscript > div.m-title-page {
        break-before: avoid-page !important;
    }

} /* end @media print */

