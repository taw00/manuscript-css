/* Verifies the basic structure of the document and sets out the initial
 * display and block-sizing rules.
 *
 * Copyright (c) Todd Warner
 * This work is licensed under Attribution 4.0 International. To view a copy
 * of this license, visit http://creativecommons.org/licenses/by/4.0/
 */

/*
 * Enforcing the structure
 * - first we remove all things
 * - then we add back only what is allowed
 *
 * Note, experimenting with a version that changes text appearance so that
 * divergent user-choices are highlighted instead of merely vanished.
 */

html,
body,
#vpage,
#vpage > *,
#manuscript > *,
#manuscript .title-page > *,
#manuscript .part > *,
#manuscript .chapter > *,
#manuscript .scene > *,
#manuscript .subscenes > *, /* this is still experimental */
#manuscript .poem > *,
#manuscript .x-poem > *,
#manuscript .contact > *,
#manuscript .count > *,
#manuscript .title > *,
div.xxxxxxxx {
    display: none;
}


/* TOP-LEVEL CONTAINERS
 * This enables the containers by reverting their type.
 * html, body, div#vpage, article#manuscript
 * Note, these can't be defined with 'display: flex' since they represent the
 * page-spanning outer boxes. PDF rendering breaks if #manuscript is of type
 * flex. */

html:has(body),
body:has(div#vpage),
div#vpage:has(article#manuscript),
/* a vpage can only contain a #manuscript */
div#vpage > article#manuscript,
div.xxxxxxxx {
    display: revert;
    box-sizing: border-box;
}


/* TOP-LEVEL CONTAINERS W/IN #manuscript (all but title page and poem)
 * This both enables the containers and defines their container type.
 *
 * section:is(.part,.chapter,.scene)
 * div:is(.x-poem)
 * div.title-page and section.poem is handled separately
 */
div#vpage > article#manuscript > section.part,
div#vpage > article#manuscript > section.chapter,
div#vpage > article#manuscript > section.scene,
div#vpage > article#manuscript section.part > section.chapter,
div#vpage > article#manuscript section.part > section.scene,
div#vpage > article#manuscript section.scene > div.subscenes,
div#vpage > article#manuscript section.scene > div.x-poem,
div#vpage > article#manuscript section.scene > section.subscenes > div.scene,
div#vpage > article#manuscript section.chapter > section.scene,
div#vpage > article#manuscript div.title > div.x-poem,
div.xxxxxxxx {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
}


/* TOP-LEVEL CONTAINERS W/IN #manuscript (title page and poem)
 * This both enables the containers and defines their container type.
 * div.title-page
 * section.poem */

/* title page and poem: grids with two columns and two rows
 * note, .poem is ONLY enabled w/in a article.#manuscript.poetry container */
div#vpage > article#manuscript > div.title-page,
div#vpage > article#manuscript:is(.poetry) > section.poem,
div#vpage > article#manuscript section.part > section.poem,
div#vpage > article#manuscript section.chapter > section.poem,
div.xxxxxxxx {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr auto;
    box-sizing: border-box;
}


/* N-TIER CONTAINERS & ELEMENTS W/IN TOP-LEVEL and NEXT-LEVEL CONTAINERS
 * This enables the containers and elements and reverts their type. */

/* the title page (is managed differently) */
div#vpage > article#manuscript > div.title-page > div.title,
div#vpage > article#manuscript > div.title-page > div.contact,
div#vpage > article#manuscript > div.title-page > div.count,
/* a part can only contain a title block, and then chapters and/or scenes/poems */
div#vpage > article#manuscript section.part > div.title,
/* a chapter can only contain a title block and/or scenes/poems */
div#vpage > article#manuscript section.chapter > div.title,
/* a scene can only contain a title block, subscenes, img, hr, ul, ol, dl, pre, p,
 * blockquote, x-poem, h-tag, div, table */
div#vpage > article#manuscript section.scene > div.title,
div#vpage > article#manuscript section.scene > :is(div), /* we have to allow for custom styling */
div#vpage > article#manuscript section.scene > :is(div.note),
div#vpage > article#manuscript section.scene > :is(img, hr, ul, ol, dl, pre, table),
div#vpage > article#manuscript section.scene > :is(h1, h2, h3, h4, h5, blockquote, p),
div#vpage > article#manuscript section.scene > :is(h6), /* a manual dinkus */
/* a poem can contain a contact, a count, a title, preformatted blocks (poem
 * stanzas), and notes.
 * (<div> specifically called out because editing tools like to wrap <pre>) */
div#vpage > article#manuscript section.poem > div.title,
div#vpage > article#manuscript section.poem > div.contact,
div#vpage > article#manuscript section.poem > div.count,
div#vpage > article#manuscript section.poem > pre,
div#vpage > article#manuscript section.poem > div.note,
/* an arbitrary poem can contain a title header and pre */
div#vpage > article#manuscript div.x-poem > div.title,
div#vpage > article#manuscript div.x-poem > pre,
div#vpage > article#manuscript div.x-poem > div.note,
/* a title block can only contain a p, blockquote, x-poem, or h-tag */
div#vpage > article#manuscript div.title > :is(h1, h2, h3, h4, h5, blockquote, p),
/* counts and contacts can only contain paragraphs */
div#vpage > article#manuscript div.contact > p,
div#vpage > article#manuscript div.count > p,
/* We have some special cases because … meddling by markdown ediors … */
div#vpage > article#manuscript section.scene > div.joplin-editable, /* special case */
div#vpage > article#manuscript section.poem > div.joplin-editable,  /* special case */
div#vpage > article#manuscript div.x-poem > div.joplin-editable,      /* special case */
div.xxxxxxxx {
    display: revert;
    box-sizing: border-box;
}




#manuscript {
    & section,
    & section > .title {
        clear: both;
    }

    & .count,
    & div.x-poem {
        box-sizing: border-box;
    }

    /* All the dinkuses and the -30- */
    &::before, &::after,
    & section::before, & section::after {
        box-sizing: border-box;
    }

    /* … remove dinkuses for the last visible section
     * (.hide is declared in m-overrides-and-conveniences.css)
     *   Can also be written:
     *      section:not(.hide):not(:has …)
     *   but stylelint gripes */
    section:not(.hide, :has(~ :is(section,div):not(.hide)))::after {
        display: none;
    }

    /* this configuration is overly pedantic */
    & :is(h1, h2, h3, h4, h5, h6, blockquote, p) {
        box-sizing: border-box;
    }
    & pre {
        display: block;
        box-sizing: border-box;
    }
    & code {
        white-space: normal;
        box-sizing: border-box;
    }
    & pre > code {
        display: inline;
        box-sizing: border-box;
    }
    & img {
        max-width: 100%;
        box-sizing: border-box;
    }
} /* end #manuscript */




/* SAVED FOR POSTERITY ----------------------------------------------------- */

/* if title page and poem is using flex instead of grid - see also
 * core/top-level.css */
/*
div#vpage > article#manuscript > div.title-page,
div#vpage > article#manuscript > section.poem,
div#vpage > article#manuscript > section.book > section.poem,
div#vpage > article#manuscript section.part > section.poem,
div#vpage > article#manuscript section.chapter > section.poem,
div.xxxxxxxx {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
}
*/

