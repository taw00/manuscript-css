/* Reset the Joplin app's base styles to more friendly defaults for
 * manuscript.css when attempting to render from the application.
 * <https://joplinapp.org>
 *
 * Markdown toolchains manipulate stylings. This attempts to reset those to
 * play nice with manuscript-css.
 *
 * Copyright (c) Todd Warner
 * This work is licensed under Attribution 4.0 International. To view a copy
 * of this license, visit http://creativecommons.org/licenses/by/4.0/
 */

/*
 * JOPLIN adjustments
 *
 * - normalize a-links
 * - neutralize inline code stylings
 *   - base syntax hightlighting for pre/code
 *   - turn off background filters and things for pre/code (mostly an issue
 *     with exported/printed notes
 * - Rendered view: make the viewport 100%
 * - Joplin Cloud view: remove note title, last-update, watermark the header
 *   and footer, viewport to 100%
 * - remove extra padding in exported/printed notes
 */


@layer lm-reset-joplin-constants {

:root {
    --m-reset-joplin-navbar-opacity: 0.15;
    --m-reset-joplin-footer-opacity: 0.5;
    --m-reset-joplin-footer-color: rgb(50 55 63);
    /*--m-reset-joplin-footer-color-link: rgb(0 0 238);*/ /* default */
    --m-reset-joplin-footer-color-link: hsl(225deg 73% 26%); /* dark bluejeans */
    --m-reset-joplin-background-color-body: var(--m-desktop-color);
    --m-reset-joplin-font-weight-code: var(--m-font-weight-code);
}

} /* end @layer lm-reset-joplin-constants */


@media screen {
    /* a darkgray "desk" and a "trans" content box framing the #rendered-md */
    html { background-color: transparent; }
    body {
        background-color: var(--m-reset-joplin-background-color-body);
    }

    body#joplin-container-body {
        /* Remove the padding and bg that frames #rendered-md */
        & > #joplin-container-content {
            background-color: transparent;
            padding: 0;
        }
    }

    /* rendered to HTML view */
    body:not(#joplin-container-body) {
        & > div.exported-note {
            margin: 0;
            padding: 0;
            & > div.exported-note-title {
                display: none !important;
            }
        }
    }

    /* Joplin Cloud stuff */
    body.page-note {
        /* footer with copright and T&Cs - fade to watermark */
        & > div.footer div.content {
            opacity: var(--m-reset-joplin-footer-opacity);
            color: var(--m-reset-joplin-footer-color);
            & a {
                opacity: inherit;
                color: var(--m-reset-joplin-footer-color-link);
            }
        }
        & > main.main > div.container.main-container {
            /* branded navbar - fade to watermark */
            & > nav.navbar {
                opacity: var(--m-reset-joplin-navbar-opacity);
                background-color: inherit;
            }
            & > div.note-main {
                /* viewport to 100% */
                margin: 0 auto;
                padding: 0;
                max-width: 100%;
                /* remove note title */
                /* remove "Last updated" line */
                & > h1.title,
                & > p.last-updated { display: none; }
            }
        }
    }

    :root {
        /* More Joplin Cloud switches (use with the #vpage container)
         * - hide-jcloud-navbar - hide that Joplin Cloud navigate stuff
         * Don't use these next two because the service should be acknowledged.
         * But I provide them for your convenience in case there is some odd
         * case where you need to strip out everything from view but the
         * manuscript
         * - hide-jcloud-footer - hide the Joplin Cloud footer
         * - hide-jcloud - hide all of the Joplin Cloud bits
         */
        &:has(#vpage:is(.hide-jcloud-navbar)) {
            body.page-note {
                & > main.main > div.container.main-container > nav.navbar { display: none; }
            }
        }
        &:has(#vpage:is(.hide-jcloud-footer)) {
            body.page-note {
                & > div.footer { display: none; }
            }
        }
        &:has(#vpage:is(.hide-jcloud)) {
            body.page-note {
                & > main.main > div.container.main-container > nav.navbar { display: none; }
                & > div.footer { display: none; }
            }
        }

        &:has(#vpage:is(.dim)) {
            --m-reset-joplin-footer-color: var(--m-paper-color);
            --m-reset-joplin-footer-color-link: white;
        }
        &:has(#vpage:is(.dimmer)) {
            --m-reset-joplin-footer-color: var(--m-paper-color);
            --m-reset-joplin-footer-color-link: lightblue;
        }
        &:has(#vpage:is(.dark)) {
            --m-reset-joplin-footer-color: dimgray;
            --m-reset-joplin-footer-color-link: darkgray;
        }
    }
} /* end @media screen */



@media print { /* PDF */
    /* exported to PDF: both from the Joplin viewer and from Joplin's HTML
     * export the body color needs to be irrelevant (trans) */
    body#joplin-container-body,
    body:has(.exported-note) {
        /* Exported print: the body should be colorless for print */
        background-color: transparent;
        /* Exported print: Remove the padding & bg that frames #rendered-md */
        & > #joplin-container-content {
            background-color: transparent;
            padding: 0;
        }
    }
    /* exported HTNL view to PDF: remove Joplin-inserted title & padding */
    body:not(#joplin-container-body) > div.exported-note {
        margin: 0;
        padding: 0;
        & > div.exported-note-title {
            display: none !important;
        }
    }
    /* exported view: filter and background settings in userstyle.css would
     *  leave a verticle gray line in some configurations, but only in the
     *  print version.  Marvelously difficult to troubleshoot. */
    #rendered-md pre.hljs {
        border: 0;
        filter: unset;
        background: unset;
    }

    /* exported view: remove document last-update line at the top */
    div.note-main > p.last-updated {
        display: none;
    }
    /* exported view: Joplin Cloud's version */
    body.page-note {
        /* remove footer with copright and T&Cs */
        & > div.footer { display: none; }
        & > main.main > div.container.main-container {
            /* remove branded navbar */
            & > nav.navbar { display: none; }
            & > div.note-main {
                /* viewport to 100% */
                margin: 0 auto;
                padding: 0;
                max-width: 100%;
                /* remove note title */
                /* remove "Last updated" line */
                & > h1.title,
                & > p.last-updated { display: none; }
            }
        }
    }

    div#joplin-container-pluginAssetsContainer { display: none !important; }

} /* end @media print */



/* Joplin wraps all PREs with div.joplin-editable. */
#manuscript {
    & .joplin-editable {
        margin: 0; padding: 0; border: 0;
    }
}


/* rendered note main box */
#rendered-md {
    /* Rendered view: viewport to 100% */
    width: 100%; max-width: unset; margin: 0 auto; padding: unset;
    /* I under what I personally set in my Joplin CSS. We want to manage the
     * virtual paper look with the #vpage ID. */
    box-shadow: unset;
    background-color: transparent;
}

/* remove Joplin internal link icon and extra styling */
a {
    & .resource-icon { display: none; }
    &:any-link {
        color: unset;
        background: unset;
        filter: unset;
    }
    &:any-link[href='#'] { color: unset; }
    &:hover[href='#'] { color: unset; }
}
/* negate the .inline-code stylings (we take over later) */
code.inline-code {
    color: unset; background: unset;
    font-size: unset; font-weight: unset;
    font-family: unset; margin: 0; border: 0;
}

/*
 * SYNTAX HIGHLIGHT - turn off for .x-poem
 */

/* In Joplin, a pre is rendered twice, depending on things I don't understand.
 * We need to blip out the extra pre */
#rendered-md pre.joplin-source {
    display: none;
}

#vpage #manuscript :is(.x-poem,.m-poem,.m-title) {
    .hljs,
    .hljs-keyword,
    .hljs-operator,
    .hljs-pattern-match,
    .hljs-pattern-match .hljs-constructor,
    .hljs-function,
    .hljs-function .hljs-params,
    .hljs-function .hljs-params .hljs-typing,
    .hljs-module-access .hljs-module,
    .hljs-constructor,
    .hljs-constructor .hljs-string,
    .hljs-comment,
    .hljs-quote,
    .hljs-doctag,
    .hljs-formula,
    .hljs-section,
    .hljs-name,
    .hljs-selector-tag,
    .hljs-deletion,
    .hljs-subst,
    .hljs-literal,
    .hljs-string,
    .hljs-regexp,
    .hljs-addition,
    .hljs-attribute,
    .hljs-meta .hljs-string,
    .hljs-built_in,
    .hljs-title.class_,
    .hljs-class .hljs-title,
    .hljs-attr,
    .hljs-variable,
    .hljs-template-variable,
    .hljs-type,
    .hljs-selector-class,
    .hljs-selector-attr,
    .hljs-selector-pseudo,
    .hljs-number,
    .hljs-symbol,
    .hljs-bullet,
    .hljs-meta,
    .hljs-selector-id,
    .hljs-title,
    .hljs-emphasis,
    .hljs-strong,
    .hljs-link {
        color: inherit;
        background: inherit;
        font-style: inherit;
        font-weight: var(--m-reset-joplin-font-weight-code);
        text-decoration: unset;
        padding: unset;
    }
} /* end #vpage #manuscript :is(.x-poem,.m-poem,.m-title) */

